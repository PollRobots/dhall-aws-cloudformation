name: Release
on:
  workflow_run:
    workflows: ["Build and Test"]
    branches: [ master ]
    types: [ completed ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-cache-${{ hashFiles('./stack.yaml.lock') }}
    - run: nix-shell --run 'stack install'
    - uses: actions/upload-artifact@v2
      with:
        name: dhall-aws-cloudformation-linux
        path: ~/.local/bin/dhall-aws-cloudformation-exe
  build-macOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-cache-${{ hashFiles('./stack.yaml.lock') }}
    - run: nix-shell --run 'stack install'
    - uses: actions/upload-artifact@v2
      with:
        name: dhall-aws-cloudformation-macOS
        path: ~/.local/bin/dhall-aws-cloudformation-exe
  publish:
    runs-on: ubuntu-latest
    needs:
        - build-linux
        - build-macOS
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dhall-aws-cloudformation-linux
      - uses: actions/download-artifact@v2
        with:
          name: dhall-aws-cloudformation-macOS
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LAST_RELEASE=$(hub release -L 1)
          LOCAL_VERSION=$(dhall text < ./version.dhall)
          echo "main version is $LAST_RELEASE and current version is $LOCAL_VERSION"
          if [ $LAST_RELEASE != $LOCAL_VERSION ];then
            nix-shell --run 'stack install'
            hub release create -m "${LOCAL_VERSION}" -a ./dhall-aws-cloudformation-macOS  -a ./dhall-aws-cloudformation-linux "${LOCAL_VERSION}"
          fi

name: Release
on:
  workflow_run:
    workflows: ["Build and Test"]
    branches: [ master ]
    types: [ completed ]

jobs:
  publish-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-cache-${{ hashFiles('./stack.yaml.lock') }}
    - name: Setup Dhall
      uses: dhall-lang/setup-dhall@v4
    - run: |
        LAST_RELEASE=$(hub release -L 1)
        LOCAL_VERSION=$(dhall text < ./version.dhall)
        echo "main version is $LAST_RELEASE and current version is $LOCAL_VERSION"
        if [ $LAST_RELEASE != $LOCAL_VERSION ];then
          nix-shell --run 'stack install'
          cp ~/.local/bin/dhall-aws-cloudformation-exe ./dhall-aws-cloudformation-${LOCAL_VERSION}-x86_64-linux
          # hub release create -m "${LOCAL_VERSION}" -a ./dhall-aws-cloudformation-${LOCAL_VERSION}-x86_64-linux "${LOCAL_VERSION}"
        fi
  publish-macOS:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-20.09
    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-cache-${{ hashFiles('./stack.yaml.lock') }}
    - name: Setup Dhall
      uses: dhall-lang/setup-dhall@v4
    - run: |
        LAST_RELEASE=$(hub release -L 1)
        LOCAL_VERSION=$(dhall text < ./version.dhall)
        echo "main version is $LAST_RELEASE and current version is $LOCAL_VERSION"
        if [ $LAST_RELEASE != $LOCAL_VERSION ];then
          nix-shell --run 'stack install'
          cp ~/.local/bin/dhall-aws-cloudformation-exe ./dhall-aws-cloudformation-${LOCAL_VERSION}-x86_64-macOS
          # hub release create -m "${LOCAL_VERSION}" -a ./dhall-aws-cloudformation-${LOCAL_VERSION}-x86_64-macOS "${LOCAL_VERSION}"
        fi
